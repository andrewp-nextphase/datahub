DATAHUB_GMS_HOST=datahub-gms
DATAHUB_GMS_PORT=8080
DATAHUB_SECRET=YouKnowNothing
DATAHUB_APP_VERSION=1.0
DATAHUB_PLAY_MEM_BUFFER_SIZE=10MB
JAVA_OPTS=-Xms512m -Xmx512m -Dhttp.port=9002 -Dconfig.file=datahub-frontend/conf/application.conf -Djava.security.auth.login.config=datahub-frontend/conf/jaas.conf -Dlogback.configurationFile=datahub-frontend/conf/logback.xml -Dlogback.debug=false -Dpidfile.path=/dev/null

# Uncomment and set these to support SSL connection to GMS
# NOTE: Currently GMS itself does not offer SSL support, these settings are intended for when there is a proxy in front
#       of GMS that handles SSL, such as an EC2 Load Balancer.
#DATAHUB_GMS_USE_SSL=true
#DATAHUB_GMS_SSL_PROTOCOL=

# Uncomment to enable Metadata Service Authentication
# METADATA_SERVICE_AUTH_ENABLED=true

# Uncomment & populate these configs to enable OIDC SSO in React application.
# Required OIDC configs
#AUTH_OIDC_ENABLED=false
#AUTH_OIDC_CLIENT_ID=1e6f607c-e987-4258-b3cc-0824a3411c65
#AUTH_OIDC_CLIENT_SECRET=FrP8Q~5kO-TN16xWGqjLsiVmpqugixkNZP6SOaxj
#AUTH_OIDC_DISCOVERY_URI=https://login.microsoftonline.com/dac7020d-cf47-4b79-9f0d-facb19ad7102/v2.0/.well-known/openid-configuration
#AUTH_OIDC_BASE_URL=https://dcpoc.nextphase.ai
# Optional OIDC configs
AUTH_OIDC_USER_NAME_CLAIM=email
AUTH_OIDC_USER_NAME_CLAIM_REGEX=([^@]+)
AUTH_OIDC_SCOPE="openid profile email"
# Optional Provisioning Configs
AUTH_OIDC_JIT_PROVISIONING_ENABLED=true
AUTH_OIDC_PRE_PROVISIONING_REQUIRED=false
AUTH_OIDC_EXTRACT_GROUPS_ENABLED=true
AUTH_OIDC_GROUPS_CLAIM=groups

# Uncomment to disable JAAS username / password authentication (enabled by default)
# AUTH_JAAS_ENABLED=false

# Uncomment to disable persistence of client-side analytics events
# DATAHUB_ANALYTICS_ENABLED=false

# Required Kafka Producer Configs
KAFKA_BOOTSTRAP_SERVER=broker:29092
DATAHUB_TRACKING_TOPIC=DataHubUsageEvent_v1

# Required Elastic Client Configuration (Analytics)
ELASTIC_CLIENT_HOST=elasticsearch
ELASTIC_CLIENT_PORT=9200

# Optional Elastic Client Configurations
# ELASTIC_CLIENT_THREAD_COUNT=2
# ELASTIC_CLIENT_CONNECTION_REQUEST_TIMEOUT=50

# To support SSL connections to Elastic, uncomment and set the following
# ELASTIC_CLIENT_USE_SSL=true
# ELASTIC_CLIENT_SSL_PROTOCOL=TLSv1.2
# ELASTIC_CLIENT_SSL_SECURE_RANDOM_IMPLEMENTATION=
# ELASTIC_CLIENT_SSL_TRUST_STORE_FILE=
# ELASTIC_CLIENT_SSL_TRUST_STORE_TYPE=
# ELASTIC_CLIENT_SSL_TRUST_STORE_PASSWORD=
# ELASTIC_CLIENT_SSL_KEY_STORE_FILE=
# ELASTIC_CLIENT_SSL_KEY_STORE_TYPE=
# ELASTIC_CLIENT_SSL_KEY_STORE_PASSWORD=

# To use simple username/password authentication to Elasticsearch over HTTPS
# set ELASTIC_CLIENT_USE_SSL=true and uncomment:
# ELASTIC_CLIENT_USERNAME=
# ELASTIC_CLIENT_PASSWORD=